                                              FxSpacing.height(30),
                                              FxFlex(
                                                  contentPadding: false,
                                                  children: [
                                                    FxFlexItem(
                                                        sizes: 'lg-6 md-12',
                                                        child: Column(
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .start,
                                                          children: [
                                                            FxText.labelMedium(
                                                              "allocate_funds_for_task"
                                                                  .tr()
                                                                  .capitalizeWords,
                                                            ),
                                                            FxSpacing.height(8),
                                                            TextFormField(
                                                              validator: controller
                                                                  .basicValidator
                                                                  .getValidation(
                                                                      'allocate_funds_for_task'),
                                                              controller: controller
                                                                  .basicValidator
                                                                  .getController(
                                                                      'allocate_funds_for_task'),
                                                              keyboardType:
                                                                  TextInputType
                                                                      .multiline,
                                                              decoration:
                                                                  InputDecoration(
                                                                hintText:
                                                                    "20.00",
                                                                hintStyle: FxTextStyle
                                                                    .bodySmall(
                                                                        xMuted:
                                                                            true),
                                                                border:
                                                                    outlineInputBorder,
                                                                enabledBorder:
                                                                    outlineInputBorder,
                                                                focusedBorder:
                                                                    focusedInputBorder,
                                                                prefixIcon: FxContainer
                                                                    .none(
                                                                        margin: FxSpacing.right(
                                                                            12),
                                                                        alignment:
                                                                            Alignment
                                                                                .center,
                                                                        color: contentTheme
                                                                            .primary
                                                                            .withAlpha(
                                                                                40),
                                                                        child: FxText
                                                                            .labelLarge(
                                                                          "\$",
                                                                          color:
                                                                              contentTheme.primary,
                                                                        )),
                                                                prefixIconConstraints:
                                                                    BoxConstraints(
                                                                        maxHeight:
                                                                            42,
                                                                        minWidth:
                                                                            50,
                                                                        maxWidth:
                                                                            50),
                                                                contentPadding:
                                                                    FxSpacing
                                                                        .all(
                                                                            16),
                                                                isCollapsed:
                                                                    true,
                                                                floatingLabelBehavior:
                                                                    FloatingLabelBehavior
                                                                        .never,
                                                              ),
                                                            ),
                                                          ],
                                                        )),
                                                    FxFlexItem(
                                                        sizes: 'lg-6 md-12',
                                                        child: Column(
                                                          crossAxisAlignment:
                                                              CrossAxisAlignment
                                                                  .start,
                                                          children: [
                                                            FxText.labelMedium(
                                                              "funds_allocation_notes"
                                                                  .tr()
                                                                  .capitalizeWords,
                                                            ),
                                                            FxSpacing.height(8),
                                                            TextFormField(
                                                              validator: controller
                                                                  .basicValidator
                                                                  .getValidation(
                                                                      'funds_allocation_notes'),
                                                              controller: controller
                                                                  .basicValidator
                                                                  .getController(
                                                                      'funds_allocation_notes'),
                                                              keyboardType:
                                                                  TextInputType
                                                                      .multiline,
                                                              decoration:
                                                                  InputDecoration(
                                                                hintText:
                                                                    "Perform correctly.",
                                                                hintStyle: FxTextStyle
                                                                    .bodySmall(
                                                                        xMuted:
                                                                            true),
                                                                border:
                                                                    outlineInputBorder,
                                                                enabledBorder:
                                                                    outlineInputBorder,
                                                                focusedBorder:
                                                                    focusedInputBorder,
                                                                prefixIconConstraints:
                                                                    BoxConstraints(
                                                                        maxHeight:
                                                                            42,
                                                                        minWidth:
                                                                            50,
                                                                        maxWidth:
                                                                            50),
                                                                contentPadding:
                                                                    FxSpacing
                                                                        .all(
                                                                            16),
                                                                isCollapsed:
                                                                    true,
                                                                floatingLabelBehavior:
                                                                    FloatingLabelBehavior
                                                                        .never,
                                                              ),
                                                            ),
                                                          ],
                                                        )),
                                                  ]),
Column(
                                    crossAxisAlignment:
                                        CrossAxisAlignment.start,
                                    children: [
                                      TabBar(
                                        // onTap: (value) {
                                        //   debugPrint('value $value');
                                        //   controller.defaultIndex = value;
                                        //   controller.defaultTabController
                                        //       .animateTo((value));
                                        // },
                                        controller:
                                            controller.defaultTabController,
                                        isScrollable: false,

                                        tabs: [
                                          Tab(
                                            icon: FxText.bodyMedium(
                                              "Service Detail",
                                              fontWeight:
                                                  controller.defaultIndex == 0
                                                      ? 600
                                                      : 500,
                                              color:
                                                  controller.defaultIndex == 0
                                                      ? contentTheme.primary
                                                      : null,
                                            ),
                                          ),
                                          Tab(
                                            icon: FxText.bodyMedium(
                                              "Order Detail",
                                              fontWeight:
                                                  controller.defaultIndex == 1
                                                      ? 600
                                                      : 500,
                                              color:
                                                  controller.defaultIndex == 1
                                                      ? contentTheme.primary
                                                      : null,
                                            ),
                                          ),
                                          Tab(
                                            icon: FxText.bodyMedium(
                                              "Customer Detail",
                                              fontWeight:
                                                  controller.defaultIndex == 2
                                                      ? 600
                                                      : 500,
                                              color:
                                                  controller.defaultIndex == 2
                                                      ? contentTheme.primary
                                                      : null,
                                            ),
                                          ),
                                          Tab(
                                            icon: FxText.bodyMedium(
                                              "Ledger Detail",
                                              fontWeight:
                                                  controller.defaultIndex == 3
                                                      ? 600
                                                      : 500,
                                              color:
                                                  controller.defaultIndex == 3
                                                      ? contentTheme.primary
                                                      : null,
                                            ),
                                          ),
                                        ],
                                        // controller: _tabController,
                                        indicatorSize: TabBarIndicatorSize.tab,
                                      ),
                                      FxSpacing.height(8),
                                      SizedBox(
                                        height: 360,
                                        child: TabBarView(
                                          controller:
                                              controller.defaultTabController,
                                          children: [
                                            DataTable(
                                              sortAscending: true,
                                              onSelectAll: (value) {},
                                              headingRowColor:
                                                  MaterialStatePropertyAll(
                                                      contentTheme.primary
                                                          .withAlpha(40)),
                                              dataRowMaxHeight: 50,
                                              columns: [
                                                DataColumn(
                                                  label: FxText.labelLarge(
                                                    "Attributes",
                                                    fontWeight: 600,
                                                    color: contentTheme.primary,
                                                  ),
                                                ),
                                                DataColumn(
                                                  label: FxText.labelLarge(
                                                    "Details",
                                                    color: contentTheme.primary,
                                                  ),
                                                ),
                                              ],
                                              rows: [
                                                buildDataRows(
                                                  "orderDate",
                                                  "${controller.order.value.offerItem!.itemCategory}",
                                                ),
                                                buildDataRows("orderStatus",
                                                    "${controller.order.value.offerItem!.itemCategory}"),
                                                buildDataRows(
                                                  "Category",
                                                  "${controller.order.value.offerItem!.itemCategory}",
                                                ),
                                                buildDataRows(
                                                  "offerItemCategory",
                                                  "${controller.order.value.offerItem!.itemCategory}",
                                                ),
                                                buildDataRows(
                                                  "orderTrackerHash",
                                                  "${controller.order.value.offerItem!.itemCategory}",
                                                ),
                                                buildDataRows(
                                                  "Weight",
                                                  "${controller.order.value.commodityWeight}",
                                                ),
                                              ],
                                            ),
                                            DataTable(
                                              sortAscending: true,
                                              onSelectAll: (value) {},
                                              headingRowColor:
                                                  MaterialStatePropertyAll(
                                                      contentTheme.primary
                                                          .withAlpha(40)),
                                              dataRowMaxHeight: 50,
                                              columns: [
                                                DataColumn(
                                                  label: FxText.labelLarge(
                                                    "Info",
                                                    fontWeight: 600,
                                                    color: contentTheme.primary,
                                                  ),
                                                ),
                                                DataColumn(
                                                  label: FxText.labelLarge(
                                                    "Details",
                                                    color: contentTheme.primary,
                                                  ),
                                                ),
                                              ],
                                              rows: [
                                                buildDataRows(
                                                  "orderDate",
                                                  "${controller.order.value.offerItem!.itemCategory}",
                                                ),
                                                buildDataRows("orderStatus",
                                                    "${controller.order.value.offerItem!.itemCategory}"),
                                                buildDataRows(
                                                  "Category",
                                                  "${controller.order.value.offerItem!.itemCategory}",
                                                ),
                                                buildDataRows(
                                                  "offerItemCategory",
                                                  "${controller.order.value.offerItem!.itemCategory}",
                                                ),
                                                buildDataRows(
                                                  "orderTrackerHash",
                                                  "${controller.order.value.offerItem!.itemCategory}",
                                                ),
                                                buildDataRows(
                                                  "Weight",
                                                  "${controller.order.value.commodityWeight}",
                                                ),
                                              ],
                                            ),
                                            Column(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                FxText.titleSmall(
                                                  "Night Lamp (Yellow)",
                                                  fontWeight: 600,
                                                  fontSize: 18,
                                                ),
                                                FxSpacing.height(12),
                                                FxText.bodySmall(
                                                  controller.dummyTexts[1],
                                                ),
                                                FxSpacing.height(8),
                                                buildFeature("HDR Lights"),
                                                FxSpacing.height(4),
                                                buildFeature(
                                                    "Remote controlled"),
                                                FxSpacing.height(4),
                                                buildFeature(
                                                    "5+ Colors available"),
                                              ],
                                            ),
                                            Column(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                FxText.titleSmall(
                                                  "Night Lamp (Yellow)",
                                                  fontWeight: 600,
                                                  fontSize: 18,
                                                ),
                                                FxSpacing.height(12),
                                                FxText.bodySmall(
                                                  controller.dummyTexts[1],
                                                ),
                                                FxSpacing.height(8),
                                                buildFeature("HDR Lights"),
                                                FxSpacing.height(4),
                                                buildFeature(
                                                    "Remote controlled"),
                                                FxSpacing.height(4),
                                                buildFeature(
                                                    "5+ Colors available"),
                                              ],
                                            )
                                          ],
                                        ),
                                      ),
                                    ],
                                  ),  
  
  Future<void> onAddNewItem() async {
    try {
      debugPrint('onAddNewItem Method');
      var valData = basicValidator.getData();
      debugPrint('onAddNewItem common_name ${valData}');
      isLoading.value = true;
      var body = {
        "vendorID": 'admin',
        "itemName": valData['common_name'],
        "minimumPrice": valData['minimun_price'],
        "description": valData['description'],
        "itemCategory": selectedCategory.name == 'hair'
            ? 'hair style'
            : selectedCategory.name == 'cosmetics'
                ? 'skin & nail treatment'
                : 'product',
        "trendingStatus": selectedTrendingStatus.name,
        "publishStatus": selectedPublishStatus.name,
        "quantity": "0",
      };

      debugPrint('onAddNewItem serverUrl $serverUrl');

      Response<dynamic> response = await getConnect.post(
          '$serverUrl/offer-items/add-offer-items-images', body);
      ResponseBody responseBody = await processHttpResponse(response);
      debugPrint('onAddNewItem responseBody $responseBody');
      debugPrint('onAddNewItem responseBody status ${responseBody.status}');

      isLoading.value = false;

      if (responseBody.status == 500) {
        errorMessage.value = responseBody.errorMessage!.capitalizeFirst!;
      } else {
        if (responseBody.data != '') {
          var jSonData = convert.jsonDecode(responseBody.data);
          OfferItem offerItem = await decodeItem(jSonData);
          offerItemList.value = [...offerItemList, offerItem];
          Get.toNamed('/apps/ecommerce/products');
        }
      }
      isLoading.value = false;
    } catch (e) {
      isLoading(false);
      formErrors.value = true;
      formErrorMessage.value = 'Error: ${e.toString()}';
      debugPrint(e.toString());
    }
  }


            Divider(
            height: 36,
          ),
          FxText.labelLarge(
            "Salary Range",
            muted: true,
          ),
          FxSpacing.height(8),
          FxText.bodySmall(
            "The Average listing Salary is \$90,000",
          ),
          FxSpacing.height(16),
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              FxText.bodyLarge(
                "\$${controller.rangeSlider.start.toString()}",
                fontWeight: 600,
              ),
              FxText.bodyLarge(
                "\$${controller.rangeSlider.end.toString()}",
                fontWeight: 600,
              ),
            ],
          ),
          RangeSlider(
            min: 10000,
            max: 120000,
            divisions: 10,
            labels: RangeLabels(controller.rangeSlider.start.floor().toString(),
                controller.rangeSlider.end.floor().toString()),
            values: controller.rangeSlider,
            onChanged: controller.onChangeRangeSlider,
            activeColor: theme.sliderTheme.activeTrackColor,
            inactiveColor: theme.sliderTheme.inactiveTrackColor,
          )
          
          
import 'package:core_erp/controllers/auth/login_controller.dart';
import 'package:core_erp/controllers/auth/auth_controller.dart';
import 'package:core_erp/extensions/extensions.dart';
import 'package:core_erp/models/http_responses.dart';
import 'package:core_erp/utils/mixins/ui_mixin.dart';
import 'package:core_erp/views/layouts/auth_layout.dart';
import 'package:flutter/material.dart';
import 'package:flutx/flutx.dart';
import 'package:get/instance_manager.dart';
import 'package:get/state_manager.dart';

class VerficationPage extends StatefulWidget {
  const VerficationPage({super.key});

  @override
  VerficationPageState createState() => VerficationPageState();
}

class VerficationPageState extends State<VerficationPage>
    with SingleTickerProviderStateMixin, UIMixin {
  late AuthController registerController;

  @override
  void initState() {
    super.initState();
    registerController = Get.put(AuthController());
  }

  @override
  Widget build(BuildContext context) {
    return AuthLayout(
        child: GetBuilder<AuthController>(
            init: registerController,
            builder: (controller) {
              return Padding(
                padding: FxSpacing.all(flexSpacing),
                child: Form(
                  key: controller.basicValidator.formKey,
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Center(
                          child: FxText.titleLarge(
                        "verification".tr(),
                        fontWeight: 700,
                      )),
                      FxSpacing.height(4),
                      Center(
                          child: FxText.bodySmall(
                        "enter_the_otp_to_login".tr(),
                        muted: true,
                      )),
                      FxSpacing.height(64),
                      FxText.labelMedium(
                        "otp".tr().capitalizeWords,
                      ),
                      FxSpacing.height(8),
                      TextFormField(
                        validator:
                            controller.basicValidator.getValidation('email'),
                        controller:
                            controller.basicValidator.getController('email'),
                        keyboardType: TextInputType.number,
                        decoration: InputDecoration(
                            labelText: "One Time Pin",
                            labelStyle: FxTextStyle.bodySmall(xMuted: true),
                            border: outlineInputBorder,
                            prefixIcon: Icon(
                              Icons.email_outlined,
                              size: 20,
                            ),
                            contentPadding: FxSpacing.all(16),
                            isCollapsed: true,
                            floatingLabelBehavior: FloatingLabelBehavior.never),
                      ),
                      FxSpacing.height(16),
                      FxSpacing.height(28),
                      Center(
                        child: FxButton.rounded(
                          onPressed: registerController.onVerify('0000'),
                          elevation: 0,
                          padding: FxSpacing.xy(20, 16),
                          backgroundColor: contentTheme.primary,
                          child: Row(
                            mainAxisSize: MainAxisSize.min,
                            children: [
                              controller.loading
                                  ? SizedBox(
                                      height: 14,
                                      width: 14,
                                      child: CircularProgressIndicator(
                                        color: colorScheme.onPrimary,
                                        strokeWidth: 1.2,
                                      ),
                                    )
                                  : Container(),
                              if (controller.loading) FxSpacing.width(16),
                              FxText.bodySmall(
                                'verify'.tr(),
                                color: contentTheme.onPrimary,
                              ),
                            ],
                          ),
                        ),
                      ),
                      Center(
                        child: FxButton.text(
                          onPressed: () {
                            LoginDTO loginDTO = LoginDTO(
                                phone: registerController.authPhone.value);
                            registerController.onLogin(loginDTO);
                          },
                          elevation: 0,
                          padding: FxSpacing.x(16),
                          splashColor: contentTheme.secondary.withOpacity(0.1),
                          child: FxText.labelMedium(
                            'resend OTP'.tr(),
                            color: contentTheme.secondary,
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              );
            }));
  }
}
,